{% set name = "emiprep" %}
{% set version = "0.0.0" %}
{% set hash_type = "sha256" %}
{% set hash_value = "5bf32bb497208ea6609a3a34803f8342977a8d3f8c520f46a04eb95e363218c6" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: python setup.py install  --single-version-externally-managed --record=record.txt  # [not win]
  script: "%PYTHON%" setup.py install && if errorlevel 1 exit 1                             # [win]

requirements:
  build:
    - python
    # When setuptools is available add the `--single-version-externally-managed --record record.txt` above.
    - setuptools
    # if your project compiles code (such as a C extension) then add `toolchain` as a build requirement.
    - pytest-runner
    - pytest-cov
    - pytest-flake8
    - versioneer
  run:
    - python
    - numpy >=1.7
    - xarray >=0.8
    - netcdf4 >=1.2.1

test:
  # Some package might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - emiprep
  requires:
    - pytest
    - pytest-cov
    - pytest-flake8

about:
  home: http://github.com/andreas-h/emiprep
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: GNU Affero General Public License v3
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: AGPL
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE
  summary: (yet another) emission pre-processor for atmospheric chemistry models

  # The remaining entries in this section are optional, but recommended
  description: |
    emiprep is yet another emission pre-processor for atmospheric chemistry
    models. While being developed with WRF-Chem in mind, there is no reason why
    it could not be extended to be used with other models as well.
  doc_url: https://emiprep.readthedocs.io/
  dev_url: http://github.com/andreas-h/emiprep

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - andreas-h

